{"version":3,"sources":["utils/helpers.js","utils/actions.js","utils/reducers.js","utils/GlobalState.js","components/ProductItem/index.js","utils/queries.js","assets/spinner.gif","components/ProductList/index.js","components/CategoryMenu/index.js","components/CartItem/index.js","utils/auth.js","components/Cart/index.js","pages/Home.js","pages/Detail.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/mutations.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","pages/Success.js","pages/OrderHistory.js","components/Footer/Footer.js","App.js","index.js"],"names":["pluralize","name","count","idbPromise","storeName","method","object","Promise","resolve","reject","request","window","indexedDB","open","db","tx","store","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","_id","oncomplete","close","UPDATE_PRODUCTS","ADD_TO_CART","ADD_MULTIPLE_TO_CART","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","TOGGLE_CART","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","reducer","state","action","type","products","cartOpen","cart","product","map","purchaseQuantity","newState","filter","length","categories","currentCategory","StoreContext","createContext","Provider","StoreProvider","_ref","value","props","dispatch","initialState","useReducer","_jsx","useStoreContext","useContext","ProductItem","item","image","price","quantity","_jsxs","className","children","Link","to","concat","alt","src","onClick","addToCart","itemInCart","find","cartItem","parseInt","QUERY_PRODUCTS","gql","_templateObject","_taggedTemplateLiteral","QUERY_CHECKOUT","_templateObject2","QUERY_CATEGORIES","_templateObject3","_templateObject4","QUERY_USER","_templateObject5","ProductList","loading","data","useQuery","useEffect","forEach","then","category","description","spinner","CategoryMenu","categoryData","collapsed","setCollapsed","useState","toggleCollapse","id","CartItem","placeholder","onChange","target","role","removeFromCart","getProfile","decode","this","getToken","loggedIn","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","login","idToken","setItem","location","assign","logout","removeItem","stripePromise","loadStripe","Cart","getCheckout","useLazyQuery","CheckoutForm","stripe","useStripe","elements","useElements","onSubmit","async","event","preventDefault","error","paymentMethod","createPaymentMethod","card","getElement","CardElement","response","fetch","headers","body","JSON","stringify","paymentMethodId","json","ok","processPayment","toggleCart","res","redirectToCheckout","sessionId","checkout","session","getCart","Elements","sum","toFixed","calculateTotal","Auth","productIds","i","push","variables","Home","_Fragment","Detail","useParams","currentProduct","setCurrentProduct","indexedProducts","disabled","p","Jumbotron","style","height","paddingTop","NoMatch","LOGIN","ADD_ORDER","ADD_USER","Login","formState","setFormState","email","password","useMutation","handleChange","htmlFor","Signup","firstName","lastName","addUser","Nav","userData","user","class","href","Success","addOrder","setTimeout","saveOrder","OrderHistory","orders","order","purchaseDate","toLocaleDateString","index","width","Footer","rel","httpLink","createHttpLink","uri","authLink","setContext","_","authorization","client","ApolloClient","link","cache","InMemoryCache","App","darkMode","setDarkMode","React","document","classList","add","remove","ApolloProvider","Router","Routes","Route","path","element","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2ef38f91.chunk.js","sourcesContent":["export function pluralize(name, count) {\n  if (count === 1) {\n    return name;\n  }\n  return name + \"s\";\n}\n\nexport function idbPromise(storeName, method, object) {\n  return new Promise((resolve, reject) => {\n    const request = window.indexedDB.open(\"velvet\", 1);\n    let db, tx, store;\n    request.onupgradeneeded = function (e) {\n      const db = request.result;\n      db.createObjectStore(\"products\", { keyPath: \"_id\" });\n      db.createObjectStore(\"categories\", { keyPath: \"_id\" });\n      db.createObjectStore(\"cart\", { keyPath: \"_id\" });\n    };\n\n    request.onerror = function (e) {\n      console.log(\"There was an error\");\n    };\n\n    request.onsuccess = function (e) {\n      db = request.result;\n      tx = db.transaction(storeName, \"readwrite\");\n      store = tx.objectStore(storeName);\n\n      db.onerror = function (e) {\n        console.log(\"error\", e);\n      };\n\n      switch (method) {\n        case \"put\":\n          store.put(object);\n          resolve(object);\n          break;\n        case \"get\":\n          const all = store.getAll();\n          all.onsuccess = function () {\n            resolve(all.result);\n          };\n          break;\n        case \"delete\":\n          store.delete(object._id);\n          break;\n        default:\n          console.log(\"No valid method\");\n          break;\n      }\n\n      tx.oncomplete = function () {\n        db.close();\n      };\n    };\n  });\n}\n","export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\n\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\nexport const TOGGLE_CART = \"TOGGLE_CART\";\n\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\n","import { useReducer } from 'react';\nimport {\n  UPDATE_PRODUCTS,\n  ADD_TO_CART,\n  UPDATE_CART_QUANTITY,\n  REMOVE_FROM_CART,\n  ADD_MULTIPLE_TO_CART,\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n  CLEAR_CART,\n  TOGGLE_CART,\n} from './actions';\n\n// The reducer is a function that accepts the current state and an action. It returns a new state based on that action.\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    // Returns a copy of state with an update products array. We use the action.products property and spread it's contents into the new array.\n    case UPDATE_PRODUCTS:\n      return {\n        ...state,\n        products: [...action.products],\n      };\n\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.product],\n      };\n    case ADD_MULTIPLE_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.products],\n      };\n    // Returns a copy of state, sets the cartOpen to true and maps through the items in the cart.\n    // If the item's `id` matches the `id` that was provided in the action.payload, we update the purchase quantity.\n    case UPDATE_CART_QUANTITY:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: state.cart.map((product) => {\n          if (action._id === product._id) {\n            product.purchaseQuantity = action.purchaseQuantity;\n          }\n          return product;\n        }),\n      };\n\n    // First we iterate through each item in the cart and check to see if the `product._id` matches the `action._id`\n    // If so, we remove it from our cart and set the updated state to a variable called `newState`\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter((product) => {\n        return product._id !== action._id;\n      });\n\n      // Then we return a copy of state and check to see if the cart is empty.\n      // If not, we set the cartOpen status to  `true`. Then we return an updated cart array set to the value of `newState`.\n      return {\n        ...state,\n        cartOpen: newState.length > 0,\n        cart: newState,\n      };\n\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartOpen: false,\n        cart: [],\n      };\n\n    case TOGGLE_CART:\n      return {\n        ...state,\n        cartOpen: !state.cartOpen,\n      };\n\n    case UPDATE_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.categories],\n      };\n\n    case UPDATE_CURRENT_CATEGORY:\n      return {\n        ...state,\n        currentCategory: action.currentCategory,\n      };\n\n    // Return the state as is in the event that the `action.type` passed to our reducer was not accounted for by the developers\n    // This saves us from a crash.\n    default:\n      return state;\n  }\n};\n\nexport function useProductReducer(initialState) {\n  return useReducer(reducer, initialState);\n}\n","import React, { createContext, useContext } from \"react\";\nimport { useProductReducer } from './reducers'\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\nconst StoreProvider = ({ value = [], ...props }) => {\n  const [state, dispatch] = useProductReducer({\n    products: [],\n    cart: [],\n    cartOpen: false,\n    categories: [],\n    currentCategory: '',\n  });\n\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { pluralize } from \"../../utils/helpers\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nfunction ProductItem(item) {\n  const [state, dispatch] = useStoreContext();\n  const { name, image, price, quantity, _id } = item;\n  const { cart } = state;\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id);\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n      idbPromise(\"cart\", \"put\", {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...item, purchaseQuantity: 1 },\n      });\n      idbPromise(\"cart\", \"put\", { ...item, purchaseQuantity: 1 });\n    }\n  };\n\n  return (\n    <div className=\"card\">\n      <Link to={`/products/${_id}`}>\n        <img className=\"card-img-top\" alt={name} src={`/images/${image}`} />\n        <div className=\"card-body\">\n          <p className=\"card-text\">{name}</p>\n        </div>\n      </Link>\n      <div className=\"card-footer\">\n        <div>\n          {quantity} {pluralize(\"item\", quantity)} in stock\n        </div>\n\n        <span className=\"price\">${price}</span>\n        <button className=\"btn btn-primary cartBtns\" onClick={addToCart}>\n          Add to cart\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default ProductItem;\n","import { gql } from '@apollo/client';\n\nexport const QUERY_PRODUCTS = gql`\n  query getProducts($category: ID) {\n    products(category: $category) {\n      _id\n      name\n      description\n      price\n      quantity\n      image\n      category {\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($products: [ID]!) {\n    checkout(products: $products) {\n      session\n    }\n  }\n`;\n\nexport const QUERY_ALL_PRODUCTS = gql`\n  {\n    products {\n      _id\n      name\n      description\n      price\n      quantity\n      category {\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n  {\n    categories {\n      _id\n      name\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      firstName\n      lastName\n      orders {\n        _id\n        purchaseDate\n        products {\n          _id\n          name\n          description\n          price\n          quantity\n          image\n        }\n      }\n    }\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/spinner.7e729fec.gif\";","import React, { useEffect } from \"react\";\nimport ProductItem from \"../ProductItem\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { UPDATE_PRODUCTS } from \"../../utils/actions\";\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_PRODUCTS } from \"../../utils/queries\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport spinner from \"../../assets/spinner.gif\";\n\nfunction ProductList() {\n  const [state, dispatch] = useStoreContext();\n  const { currentCategory } = state;\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n      data.products.forEach((product) => {\n        idbPromise(\"products\", \"put\", product);\n      });\n    } else if (!loading) {\n      idbPromise(\"products\", \"get\").then((products) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products,\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterProducts() {\n    if (!currentCategory) {\n      return state.products;\n    }\n\n    return state.products.filter(\n      (product) => product.category._id === currentCategory\n    );\n  }\n\n  return (\n    <div className=\"container-fluid\">\n      <h2 className=\"text-center\">Our Products:</h2>\n      {state.products.length ? (\n        <div className=\"row justify-content-center\">\n          {filterProducts().map((product) => (\n            <ProductItem\n              key={product._id}\n              _id={product._id}\n              image={product.image}\n              name={product.name}\n              description={product.description}\n              price={product.price}\n              quantity={product.quantity}\n            />\n          ))}\n        </div>\n      ) : (\n        <h3 className=\"text-center\">You haven't added any products yet!</h3>\n      )}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n    </div>\n  );\n}\n\nexport default ProductList;\n","import React, { useEffect, useState } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport {\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n} from \"../../utils/actions\";\nimport { QUERY_CATEGORIES } from \"../../utils/queries\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nfunction CategoryMenu() {\n  const [state, dispatch] = useStoreContext();\n  const { categories } = state;\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n  const [collapsed, setCollapsed] = useState(true);\n\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories,\n      });\n      categoryData.categories.forEach((category) => {\n        idbPromise(\"categories\", \"put\", category);\n      });\n    } else if (!loading) {\n      idbPromise(\"categories\", \"get\").then((categories) => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories,\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = (id) => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id,\n    });\n    setCollapsed(true);\n  };\n\n  const toggleCollapse = () => {\n    setCollapsed(!collapsed);\n  };\n\n  return (\n    <div className=\"container my-4\">\n      <h3 className=\"text-center\">Choose a Category:</h3>\n      <nav className=\"navbar navbar-expand-lg \">\n        <div className=\"container\">\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarNav\"\n            aria-controls=\"navbarNav\"\n            aria-expanded={!collapsed ? true : false}\n            aria-label=\"Toggle navigation\"\n            onClick={toggleCollapse}\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div\n            className={`collapse navbar-collapse ${collapsed ? \"\" : \"show\"}`}\n            id=\"navbarNav\"\n          >\n            <ul className=\"navbar-nav mx-auto text-center\">\n              {categories.map((item) => (\n                <li className=\"nav-item\" key={item._id}>\n                  <button\n                    className=\"btn btn-secondary categoryBtn nav-link\"\n                    onClick={() => {\n                      handleClick(item._id);\n                    }}\n                  >\n                    {item.name}\n                  </button>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </nav>\n    </div>\n  );\n}\n\nexport default CategoryMenu;\n","import React from \"react\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nconst CartItem = ({ item }) => {\n  const [, dispatch] = useStoreContext();\n\n  const removeFromCart = (item) => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id,\n    });\n    idbPromise(\"cart\", \"delete\", { ...item });\n  };\n\n  const onChange = (e) => {\n    const value = e.target.value;\n    if (value === \"0\") {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        _id: item._id,\n      });\n      idbPromise(\"cart\", \"delete\", { ...item });\n    } else {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: item._id,\n        purchaseQuantity: parseInt(value),\n      });\n      idbPromise(\"cart\", \"put\", { ...item, purchaseQuantity: parseInt(value) });\n    }\n  };\n\n  return (\n    <div className=\"flex-row\">\n      <div>\n        <img src={`/images/${item.image}`} alt=\"\" />\n      </div>\n      <div>\n        <div>\n          {item.name}, ${item.price}\n        </div>\n        <div>\n          <span>Qty:</span>\n          <input\n            type=\"number\"\n            placeholder=\"1\"\n            value={item.purchaseQuantity}\n            onChange={onChange}\n          />\n          <span\n            role=\"img\"\n            aria-label=\"trash\"\n            onClick={() => removeFromCart(item)}\n          >\n            <img className=\"trash-icon\" src=\"/trash.ico\" alt=\"trash\" />\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CartItem;\n","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useEffect } from \"react\";\nimport {\n  CardElement,\n  useStripe,\n  useElements,\n  Elements,\n} from \"@stripe/react-stripe-js\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { useLazyQuery } from \"@apollo/client\";\nimport { QUERY_CHECKOUT } from \"../../utils/queries\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport CartItem from \"../CartItem\";\nimport Auth from \"../../utils/auth\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from \"../../utils/actions\";\nimport \"./style.css\";\n\n// Stripe\nconst stripePromise = loadStripe(\n  \"pk_test_51Nl1V0IUgxhWhAI19CoN4iBAWLw9jq0krwfCKLohPa734YUEzVM5oz15zqX2vRuq2tvOf4TvCg9V0TZycDeaRRpU004SHwoa2S\"\n);\n\nconst Cart = () => {\n  const [state, dispatch] = useStoreContext();\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n\n  const CheckoutForm = () => {\n    const stripe = useStripe();\n    const elements = useElements();\n\n    const handleSubmit = async (event) => {\n      event.preventDefault();\n      const { error, paymentMethod } = await stripe.createPaymentMethod({\n        type: \"card\",\n        card: elements.getElement(CardElement),\n      });\n\n      if (error) {\n        console.log(\"Stripe error:\", error);\n      } else {\n        processPayment(paymentMethod);\n      }\n    };\n    async function processPayment(paymentMethod) {\n      const response = await fetch(\"/api/charge\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          paymentMethodId: paymentMethod.id,\n        }),\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        console.error(\"Payment failed:\", data);\n        return;\n      }\n\n      console.log(\"Payment successful:\", data);\n    }\n\n    return <form onSubmit={handleSubmit}>Thank you for shopping with us!</form>;\n  };\n\n  useEffect(() => {\n    if (data) {\n      stripePromise.then((res) => {\n        res.redirectToCheckout({ sessionId: data.checkout.session });\n      });\n    }\n  }, [data]);\n\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise(\"cart\", \"get\");\n      dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\n    }\n\n    if (!state.cart.length) {\n      getCart();\n    }\n  }, [state.cart.length, dispatch]);\n\n  function toggleCart() {\n    dispatch({ type: TOGGLE_CART });\n  }\n\n  function calculateTotal() {\n    let sum = 0;\n    state.cart.forEach((item) => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n\n  function submitCheckout() {\n    const productIds = [];\n\n    state.cart.forEach((item) => {\n      for (let i = 0; i < item.purchaseQuantity; i++) {\n        productIds.push(item._id);\n      }\n    });\n\n    getCheckout({\n      variables: { products: productIds },\n    });\n  }\n\n  if (!state.cartOpen) {\n    return (\n      <div className=\"cart-closed\" onClick={toggleCart}>\n        <span role=\"img\" aria-label=\"cart\">\n          <img\n            className=\"cartLogo\"\n            src=\"/icons8-cart-50.png\"\n            alt=\"cart image\"\n          />\n        </span>\n      </div>\n    );\n  }\n\n  return (\n    <Elements stripe={stripePromise}>\n      <div className=\"cart container\">\n        <div className=\"close\" onClick={toggleCart}>\n          [close]\n        </div>\n        <h2>Shopping Cart</h2>\n        {state.cart.length ? (\n          <div>\n            {state.cart.map((item) => (\n              <CartItem key={item._id} item={item} />\n            ))}\n\n            <div>\n              <strong>Total: ${calculateTotal()} </strong>\n\n              {Auth.loggedIn() ? (\n                <div>\n                  <button className=\"btn btn-primary\" onClick={submitCheckout}>\n                    Checkout\n                  </button>\n                  <CheckoutForm />\n                </div>\n              ) : (\n                <span> (log in/sign up to check out)</span>\n              )}\n            </div>\n          </div>\n        ) : (\n          <h3>\n            <span role=\"img\" aria-label=\"shocked\">\n              😱\n            </span>\n            You haven't added anything to your cart yet!\n          </h3>\n        )}\n      </div>\n    </Elements>\n  );\n};\n\nexport default Cart;\n","import React from \"react\";\nimport ProductList from \"../components/ProductList\";\nimport CategoryMenu from \"../components/CategoryMenu\";\nimport Cart from \"../components/Cart\";\n\n// Home page\nconst Home = () => {\n  return (\n    <div className=\"container-fluid\">\n      {/* Hero Image (Jumbotron) */}\n      <div className=\"jumbotron jumbotron-fluid hero-image\">\n        {/* Text on Image */}\n        <></>\n        <h1 className=\"display-4\">Discover Your Style</h1>\n        <p className=\"lead\">Explore the Latest Fashion Trends</p>\n      </div>\n      {/* Main Content */}\n      <div className=\"container-fluid\">\n        <CategoryMenu />\n        <ProductList />\n        <Cart />\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/client\";\nimport Cart from \"../components/Cart\";\nimport { useStoreContext } from \"../utils/GlobalState\";\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_PRODUCTS,\n} from \"../utils/actions\";\nimport { QUERY_PRODUCTS } from \"../utils/queries\";\nimport { idbPromise } from \"../utils/helpers\";\nimport spinner from \"../assets/spinner.gif\";\n\nfunction Detail() {\n  const [state, dispatch] = useStoreContext();\n  const { id } = useParams();\n  const [currentProduct, setCurrentProduct] = useState({});\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n  const { products, cart } = state;\n\n  useEffect(() => {\n    // already in global store\n    if (products.length) {\n      setCurrentProduct(products.find((product) => product._id === id));\n    }\n    // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n\n      data.products.forEach((product) => {\n        idbPromise(\"products\", \"put\", product);\n      });\n    }\n    // get cache from idb\n    else if (!loading) {\n      idbPromise(\"products\", \"get\").then((indexedProducts) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts,\n        });\n      });\n    }\n  }, [products, data, loading, dispatch, id]);\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n      idbPromise(\"cart\", \"put\", {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct, purchaseQuantity: 1 },\n      });\n      idbPromise(\"cart\", \"put\", { ...currentProduct, purchaseQuantity: 1 });\n    }\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id,\n    });\n\n    idbPromise(\"cart\", \"delete\", { ...currentProduct });\n  };\n\n  return (\n    <div className=\"container-fluid detail\">\n      {currentProduct && cart ? (\n        <>\n          <Link to=\"/\" className=\"btn \">\n            ← Back to Products\n          </Link>\n\n          <div className=\"row \">\n            {/* Left Column */}\n            <div className=\"col-md-6 product-image\">\n              <img\n                src={`/images/${currentProduct.image}`}\n                alt={currentProduct.name}\n                className=\"img-fluid img-detail\"\n              />\n            </div>\n\n            {/* Right Column */}\n            <div className=\"col-md-6 product-info\">\n              <h2>{currentProduct.name}</h2>\n              <div>\n                <p>{currentProduct.description}</p>\n\n                <p>\n                  <strong>Price:</strong> ${currentProduct.price}{\" \"}\n                  <button className=\"btn \" onClick={addToCart}>\n                    Add to Cart\n                  </button>\n                  <button\n                    className=\"btn \"\n                    disabled={!cart.find((p) => p._id === currentProduct._id)}\n                    onClick={removeFromCart}\n                  >\n                    Remove from Cart\n                  </button>\n                </p>\n              </div>\n            </div>\n          </div>\n        </>\n      ) : null}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n      <Cart />\n    </div>\n  );\n}\n\nexport default Detail;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      className=\"jumbotron text-center\"\n      style={{ height: \"560px\", paddingTop: \"120px\" }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div className=\"container mt-5\">\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($products: [ID]!) {\n    addOrder(products: $products) {\n      purchaseDate\n      products {\n        _id\n        name\n        description\n        price\n        quantity\n        category {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n","import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { Link } from \"react-router-dom\";\nimport { LOGIN } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: \"\", password: \"\" });\n  const [login, { error }] = useMutation(LOGIN);\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container login\">\n      <div className=\"signupbox\">\n        <h2 className=\"formTitle\">Log In</h2>\n        <form onSubmit={handleFormSubmit} className=\"user-form\">\n          <div className=\"input-box\">\n            <label htmlFor=\"email\">Email address:</label>\n            <input\n              placeholder=\"youremail@test.com\"\n              name=\"email\"\n              type=\"email\"\n              id=\"email\"\n              className=\"form-control\"\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"input-box\">\n            <label htmlFor=\"pwd\">Password:</label>\n            <input\n              placeholder=\"******\"\n              name=\"password\"\n              type=\"password\"\n              id=\"pwd\"\n              className=\"form-control\"\n              onChange={handleChange}\n            />\n          </div>\n          {error ? (\n            <div>\n              <p className=\"error-text\">\n                The provided credentials are incorrect\n              </p>\n            </div>\n          ) : null}\n          <div>\n            <button type=\"submit\" className=\"btn submit\">\n              Submit\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport Auth from \"../utils/auth\";\nimport { ADD_USER } from \"../utils/mutations\";\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({\n    email: \"\",\n    password: \"\",\n    firstName: \"\",\n    lastName: \"\",\n  });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container signup\">\n      <div className=\"signupbox\">\n        <h2 className=\"formTitle\">Sign Up</h2>\n        <form onSubmit={handleFormSubmit} className=\"user-form2\">\n          <div className=\"input-box\">\n            <label htmlFor=\"firstName\">First Name:</label>\n            <input\n              placeholder=\"First\"\n              name=\"firstName\"\n              type=\"firstName\"\n              id=\"firstName\"\n              className=\"form-control\"\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"input-box\">\n            <label htmlFor=\"lastName\">Last Name:</label>\n            <input\n              placeholder=\"Last\"\n              name=\"lastName\"\n              type=\"lastName\"\n              id=\"lastName\"\n              className=\"form-control\"\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"input-box\">\n            <label htmlFor=\"email\">Email:</label>\n            <input\n              placeholder=\"youremail@test.com\"\n              name=\"email\"\n              type=\"email\"\n              id=\"email\"\n              className=\"form-control\"\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"input-box\">\n            <label htmlFor=\"pwd\">Password:</label>\n            <input\n              placeholder=\"*********\"\n              name=\"password\"\n              type=\"password\"\n              id=\"pwd\"\n              className=\"form-control\"\n              onChange={handleChange}\n            />\n          </div>\n          <div>\n            <button type=\"submit\" className=\"btn submit\">\n              Submit\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Signup;\n","/* Component */\nimport React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_USER } from \"../../utils/queries\";\n\nfunction Nav(props) {\n  const { data: userData } = useQuery(QUERY_USER);\n  const user = userData?.user;\n\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className=\"navbar\">\n          <li className=\"li\">\n            {user && (\n              <Link\n                class=\"nav-link nav-item\"\n                className=\"name\"\n                id=\"welcomeMessage\"\n                to=\"/\"\n              >\n                Welcome, {user.firstName} {user.lastName}\n              </Link>\n            )}\n          </li>\n\n          <li className=\"li\">\n            <Link class=\"nav-link\" to=\"/orderHistory\">\n              <button className=\"btn\">View Orders</button>\n            </Link>\n          </li>\n          <li className=\"li\">\n            <a href=\"/\" onClick={() => Auth.logout()}>\n              <button className=\"btn\">Logout</button>\n            </a>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <div>\n          <ul className=\"flex-row navbar\">\n            <li class=\"nav-item\">\n              <Link class=\"nav-link\" to=\"/signup\">\n                <button className=\"btn\">SIGN UP</button>\n              </Link>\n            </li>\n            <li className=\"mx-1\">\n              <Link class=\"nav-link\" to=\"/login\">\n                <button className=\"btn\">LOG IN</button>\n              </Link>\n            </li>\n          </ul>\n        </div>\n      );\n    }\n  }\n\n  return (\n    <header className=\"container-fluid navigation\">\n      <div className=\"flex-row navbar navbar-expand-lg\">\n        <Link className=\"logo navbar-brand\" to=\"/\">\n          Velvet\n        </Link>\n\n        <nav>{showNavigation()}</nav>\n      </div>\n    </header>\n  );\n}\n\nexport default Nav;\n","import React, { useEffect } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport { ADD_ORDER } from \"../utils/mutations\";\nimport { idbPromise } from \"../utils/helpers\";\n\nfunction Success() {\n  const [addOrder] = useMutation(ADD_ORDER);\n\n  useEffect(() => {\n    async function saveOrder() {\n      const cart = await idbPromise(\"cart\", \"get\");\n      const products = cart.map((item) => item._id);\n\n      if (products.length) {\n        const { data } = await addOrder({ variables: { products } });\n        const productData = data.addOrder.products;\n\n        productData.forEach((item) => {\n          idbPromise(\"cart\", \"delete\", item);\n        });\n      }\n\n      setTimeout(() => {\n        window.location.assign(\"/\");\n      }, 3000);\n    }\n\n    saveOrder();\n  }, [addOrder]);\n\n  return (\n    <div className=\"container mt-5\">\n      <Jumbotron>\n        <h1>Success!</h1>\n        <h2>Thank you for your purchase!</h2>\n        <h2>You will now be redirected to the home page</h2>\n      </Jumbotron>\n    </div>\n  );\n}\n\nexport default Success;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_USER } from \"../utils/queries\";\nimport Cart from \"../components/Cart\";\n\nfunction OrderHistory() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n  return (\n    <div className=\"container-fluid\">\n      <img\n        src=\"/order-history.png\"\n        alt=\"Orders Image\"\n        className=\"img-fluid mb-4 order-history-image\"\n      />\n\n      <Link to=\"/\" className=\"btn\">\n        ← Back to Products\n      </Link>\n\n      {user ? (\n        <>\n          <div className=\"order-history\">\n            <h2>\n              Order History for {user.firstName} {user.lastName}\n            </h2>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h3>\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\n                </h3>\n                <div className=\"card-group\">\n                  {order.products.map(({ _id, image, name, price }, index) => (\n                    <div\n                      key={index}\n                      className=\"card m-2\"\n                      style={{ width: \"18rem\" }}\n                    >\n                      <Link to={`/products/${_id}`}>\n                        <img\n                          className=\"card-img-top\"\n                          src={`/images/${image}`}\n                          alt={name}\n                        />\n                        <div className=\"card-body\">\n                          <h5 className=\"card-title\">{name}</h5>\n                          <p className=\"card-text\">${price}</p>\n                        </div>\n                      </Link>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </div>\n        </>\n      ) : null}\n      <Cart />\n    </div>\n  );\n}\n\nexport default OrderHistory;\n","import React from \"react\";\n\n// Footer component & styling\nexport default function Footer(props) {\n  return (\n    <footer>\n      <a\n        href=\"https://github.com/itcreativeusa\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <i className=\"bi bi-github\"></i> Kateryna Stetsenko\n      </a>\n    </footer>\n  );\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\n\nimport Home from \"./pages/Home\";\nimport Detail from \"./pages/Detail\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport Nav from \"./components/Nav\";\nimport { StoreProvider } from \"./utils/GlobalState\";\nimport Success from \"./pages/Success\";\nimport OrderHistory from \"./pages/OrderHistory\";\nimport Footer from \"./components/Footer/Footer\";\n\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"id_token\");\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  const [darkMode, setDarkMode] = React.useState(false);\n\n  React.useEffect(() => {\n    if (darkMode) {\n      document.body.classList.add(\"dark\");\n    } else {\n      document.body.classList.remove(\"dark\");\n    }\n  }, [darkMode]);\n\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <StoreProvider>\n            <Nav />\n            <Routes>\n              <Route path=\"/\" element={<Home />} />\n              <Route path=\"/login\" element={<Login />} />\n              <Route path=\"/signup\" element={<Signup />} />\n              <Route path=\"/success\" element={<Success />} />\n              <Route path=\"/orderHistory\" element={<OrderHistory />} />\n              <Route path=\"/products/:id\" element={<Detail />} />\n              <Route path=\"*\" element={<NoMatch />} />\n            </Routes>\n            <Footer />\n          </StoreProvider>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}